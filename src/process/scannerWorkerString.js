export const workerCode = `var _$=Object.create;var{getPrototypeOf:x$,defineProperty:W,getOwnPropertyNames:P$}=Object;var G$=Object.prototype.hasOwnProperty;var j=($,D,p)=>{p=$!=null?_$(x$($)):{};let T=D||!$||!$.__esModule?W(p,"default",{value:$,enumerable:!0}):p;for(let m of P$($))if(!G$.call(T,m))W(T,m,{get:()=>$[m],enumerable:!0});return T};var X=($,D)=>()=>(D||$((D={exports:{}}).exports,D),D.exports);var q=X((iH,h$)=>{h$.exports=require("./koffi-mh148fay.node")});var b=X((oH,A$)=>{A$.exports=require("./koffi-jy8h7dbw.node")});var k=X((nH,c$)=>{c$.exports=require("./koffi-7mg0r29k.node")});var v=X((rH,I$)=>{I$.exports=require("./koffi-8sy25hb3.node")});var U=X((dH,C$)=>{C$.exports=require("./koffi-s8tnht2f.node")});var Q=X((XH,u$)=>{u$.exports=require("./koffi-3apd8ksx.node")});var Z=X((tH,f$)=>{f$.exports=require("./koffi-21qybkh3.node")});var y=X((_H,N$)=>{N$.exports=require("./koffi-hn49meed.node")});var w=X((xH,F$)=>{F$.exports=require("./koffi-vxxt697f.node")});var z=X((PH,J$)=>{J$.exports=require("./koffi-c773gx8x.node")});var Y=X((GH,g$)=>{g$.exports=require("./koffi-nm70typw.node")});var $$=X((BH,R$)=>{R$.exports=require("./koffi-9xxxg8be.node")});var H$=X((EH,V$)=>{V$.exports=require("./koffi-5p81xhrq.node")});var T$=X((KH,M$)=>{M$.exports=require("./koffi-kwcqehep.node")});var D$=X((hH,S$)=>{S$.exports=require("./koffi-cnrjrnnp.node")});var L$=X((AH,s$)=>{s$.exports=require("./koffi-7pc8m9wx.node")});var p$=X((cH,W$)=>{W$.exports=require("./koffi-0s66zt6v.node")});var e$=X((m$,M)=>{var __dirname="/home/tcp-protocol/Programming/arrpc/node_modules/koffi",j$=Object.getOwnPropertyNames,V=($,D)=>function p(){return D||$[j$($)[0]]((D={exports:{}}).exports,D),D.exports},O$=V({"package/src/cnoke/src/tools.js"($,D){var p=require("crypto"),T=require("fs"),m=require("https"),a=require("path"),l=require("zlib");async function o(H,L){console.log(">> Downloading "+H);let[e,n]=G(L);try{await new Promise((_,d)=>{m.get(H,(E)=>{if(E.statusCode!=200){let C=new Error(\`Download failed: \${E.statusMessage} [\${E.statusCode}]\`);C.code=E.statusCode,d(C);return}E.pipe(n),n.on("finish",()=>n.close(()=>{try{T.renameSync(n.path,L)}catch(C){if(!T.existsSync(L))d(C)}_()}))}).on("error",d),n.on("error",d)})}catch(_){n.close();try{T.unlinkSync(e)}catch(d){if(d.code!="ENOENT")throw d}throw _}}function G(H){let L=Buffer.allocUnsafe(4);for(;;)try{p.randomFillSync(L);let e=L.toString("hex").padStart(8,"0"),n=\`\${H}.\${e}\`,_=T.createWriteStream(n,{flags:"wx",mode:420});return[n,_]}catch(e){if(e.code!="EEXIST")throw e}}function A(H,L,e=0){let n=T.createReadStream(H).pipe(l.createGunzip());return new Promise((_,d)=>{let i=null,E={};n.on("readable",()=>{try{for(;;){if(i==null){let t=n.read(512);if(t==null)break;if(!t[0])continue;if(i={filename:t.toString("utf-8",0,100).replace(/\\0/g,""),mode:parseInt(t.toString("ascii",100,109),8),size:parseInt(t.toString("ascii",124,137),8),type:String.fromCharCode(t[156])},Object.assign(i,E),E={},i.filename=i.filename.replace(/\\\\/g,"/"),!i.filename.length)throw new Error("Insecure empty filename inside TAR archive");if(x(i.filename[0]))throw new Error("Insecure filename starting with / inside TAR archive");if(K(i.filename))throw new Error("Insecure filename containing '..' inside TAR archive");for(let I=0;I<e;I++)i.filename=i.filename.substr(i.filename.indexOf("/")+1)}let C=Math.floor((i.size+511)/512)*512,u=i.size?n.read(C):null;if(u==null){if(i.size)break;u=Buffer.alloc(0)}if(u=u.subarray(0,i.size),i.type=="0"||i.type=="7"){let t=L+"/"+i.filename,I=a.dirname(t);T.mkdirSync(I,{recursive:!0,mode:493}),T.writeFileSync(t,u,{mode:i.mode})}else if(i.type=="5"){let t=L+"/"+i.filename;T.mkdirSync(t,{recursive:!0,mode:i.mode})}else if(i.type=="L")E.filename=u.toString("utf-8").replace(/\\0/g,"");else if(i.type=="x"){let t=u.toString("utf-8");try{while(t.length){let I=t.match(/^([0-9]+) ([a-zA-Z0-9\\._]+)=(.*)\\n/),X$=parseInt(I[1],10),t$=I[2],s=I[3];switch(t$){case"path":E.filename=s;break;case"size":E.size=parseInt(s,10);break}t=t.substr(X$).trimStart()}}catch(I){throw new Error("Malformed PAX entry")}}i=null}}catch(C){d(C)}}),n.on("error",d),n.on("end",_)})}function x(H){if(process.platform=="win32"&&H.match(/^[a-zA-Z]:/))H=H.substr(2);return P(H[0])}function K(H){let L=0;for(;;){let e=H.indexOf("..",L);if(e<0)break;if(L=e+2,e&&!P(H[e-1]))continue;if(e+2<H.length&&!P(H[e+2]))continue;return!0}return!1}function P(H){if(H=="/")return!0;if(process.platform=="win32"&&H=="\\\\")return!0;return!1}function c(){let H=process.arch;if(H=="riscv32"||H=="riscv64"){let L=F(process.execPath,512);switch(J(L).e_flags&6){case 0:break;case 2:H+="f";break;case 4:H+="d";break;case 6:H+="q";break}}else if(H=="arm"){let L=F(process.execPath,512),e=J(L);if(e.e_flags&1024)H+="hf";else if(e.e_flags&512)H+="sf";else throw new Error("Unknown ARM floating-point ABI")}return H}function F(H,L){let e=null;try{let n=T.openSync(H),_=Buffer.allocUnsafe(L),d=T.readSync(n,_);return _.subarray(0,d)}finally{if(e!=null)T.closeSync(e)}}function J(H){let L={};if(H.length<16)throw new Error("Truncated header");if(H[0]!=127||H[1]!=69||H[2]!=76||H[3]!=70)throw new Error("Invalid magic number");if(H[6]!=1)throw new Error("Invalid ELF version");if(H[5]!=1)throw new Error("Big-endian architectures are not supported");switch(H.readUInt16LE(18)){case 3:L.e_machine="ia32";break;case 40:L.e_machine="arm";break;case 62:L.e_machine="amd64";break;case 183:L.e_machine="arm64";break;case 243:switch(H[4]){case 1:L.e_machine="riscv32";break;case 2:L.e_machine="riscv64";break}break;case 248:switch(H[4]){case 1:L.e_machine="loong32";break;case 2:L.e_machine="loong64";break}break;default:throw new Error("Unknown ELF machine type")}switch(H[4]){case 1:{if(H=H.subarray(0,68),H.length<68)throw new Error("Truncated ELF header");L.ei_class=32,L.e_flags=H.readUInt32LE(36)}break;case 2:{if(H=H.subarray(0,120),H.length<120)throw new Error("Truncated ELF header");L.ei_class=64,L.e_flags=H.readUInt32LE(48)}break;default:throw new Error("Invalid ELF class")}return L}function n$(H){try{if(T.rmSync!=null)T.rmSync(H,{recursive:!0,maxRetries:process.platform=="win32"?3:0});else T.rmdirSync(H,{recursive:!0,maxRetries:process.platform=="win32"?3:0})}catch(L){if(L.code!=="ENOENT")throw L}}function r$(H,L){if(H>8)return null;let e={6:["6.14.2","6.14.2","6.14.2"],8:["8.6.0","8.10.0","8.11.2"],9:["9.0.0","9.3.0","9.11.0"],10:["10.0.0","10.0.0","10.0.0","10.16.0","10.17.0","10.20.0","10.23.0"],11:["11.0.0","11.0.0","11.0.0","11.8.0"],12:["12.0.0","12.0.0","12.0.0","12.0.0","12.11.0","12.17.0","12.19.0","12.22.0"],13:["13.0.0","13.0.0","13.0.0","13.0.0","13.0.0"],14:["14.0.0","14.0.0","14.0.0","14.0.0","14.0.0","14.0.0","14.12.0","14.17.0"],15:["15.0.0","15.0.0","15.0.0","15.0.0","15.0.0","15.0.0","15.0.0","15.12.0"]},n=Math.max(...Object.keys(e).map((d)=>parseInt(d,10)));if(L>n)return L+".0.0";if(e[L]==null)return null;return e[L][H-1]||null}function d$(H,L){return H=String(H).replace(/-.*$/,"").split(".").reduce((n,_,d)=>n+parseInt(_,10)*Math.pow(10,2*(5-d)),0),L=String(L).replace(/-.*$/,"").split(".").reduce((n,_,d)=>n+parseInt(_,10)*Math.pow(10,2*(5-d)),0),Math.min(Math.max(H-L,-1),1)}D.exports={download_http:o,extract_targz:A,path_is_absolute:x,path_has_dotdot:K,determine_arch:c,unlink_recursive:n$,get_napi_version:r$,cmp_version:d$}}}),q$=V({"package/src/koffi/package.json"($,D){D.exports={name:"koffi",version:"2.12.0",stable:"2.12.0",description:"Fast and simple C FFI (foreign function interface) for Node.js",keywords:["foreign","function","interface","ffi","binding","c","napi"],repository:{type:"git",url:"https://github.com/Koromix/koffi"},homepage:"https://koffi.dev/",author:{name:"Niels Martign√®ne",email:"niels.martignene@protonmail.com",url:"https://koromix.dev/"},main:"./index.js",types:"./index.d.ts",scripts:{test:"node tools/koffi.js test",prepack:\`echo 'Use "npm run package" instead' && false\`,prepublishOnly:\`echo 'Use "npm run package" instead' && false\`,package:"node tools/koffi.js build"},license:"MIT",devDependencies:{esbuild:"^0.19.2"},cnoke:{api:"../../vendor/node-api-headers",output:"../../bin/Koffi/{{ platform }}_{{ arch }}",node:16,napi:8,require:"./index.js"}}}}),b$=V({"package/src/koffi/src/init.js"(exports,module){var fs=require("fs"),path=require("path"),util=require("util"),{get_napi_version,determine_arch}=O$(),pkg=q$();function detect(){if(process.versions.napi==null||process.versions.napi<pkg.cnoke.napi){let p=parseInt(process.versions.node,10),T=get_napi_version(pkg.cnoke.napi,p);if(T!=null)throw new Error(\`This engine is based on Node \${process.versions.node}, but \${pkg.name} requires Node >= \${T} in the Node \${p}.x branch (N-API >= \${pkg.cnoke.napi})\`);else throw new Error(\`This engine is based on Node \${process.versions.node}, but \${pkg.name} does not support the Node \${p}.x branch (N-API < \${pkg.cnoke.napi})\`)}let $=determine_arch();return\`\${process.platform}_\${$}\`}function init(triplet,native){if(native==null){let roots=[path.join(__dirname,"..")],triplets=[triplet];if(process.resourcesPath!=null)roots.push(process.resourcesPath);if(triplet.startsWith("linux_")){let $=triplet.replace(/^linux_/,"musl_");triplets.push($)}let filenames=roots.flatMap(($)=>triplets.flatMap((D)=>[\`\${$}/build/koffi/\${D}/koffi.node\`,\`\${$}/koffi/\${D}/koffi.node\`,\`\${$}/node_modules/koffi/build/koffi/\${D}/koffi.node\`,\`\${$}/../../bin/Koffi/\${D}/koffi.node\`])),first_err=null;for(let filename of filenames){if(!fs.existsSync(filename))continue;try{native=eval("require")(filename)}catch($){if(first_err==null)first_err=$;continue}break}if(first_err!=null)throw first_err}if(native==null)throw new Error("Cannot find the native Koffi module; did you bundle it correctly?");if(native.version!=pkg.version)throw new Error("Mismatched native Koffi modules");let mod=wrap(native);return mod}function wrap($){let D={...$,handle:util.deprecate($.opaque,"The koffi.handle() function was deprecated in Koffi 2.1, use koffi.opaque() instead","KOFFI001"),callback:util.deprecate($.proto,"The koffi.callback() function was deprecated in Koffi 2.4, use koffi.proto() instead","KOFFI002")};return D.load=(...p)=>{let T=$.load(...p);return T.cdecl=util.deprecate((...m)=>T.func("__cdecl",...m),"The koffi.cdecl() function was deprecated in Koffi 2.7, use koffi.func(...) instead","KOFFI003"),T.stdcall=util.deprecate((...m)=>T.func("__stdcall",...m),'The koffi.stdcall() function was deprecated in Koffi 2.7, use koffi.func("__stdcall", ...) instead',"KOFFI004"),T.fastcall=util.deprecate((...m)=>T.func("__fastcall",...m),'The koffi.fastcall() function was deprecated in Koffi 2.7, use koffi.func("__fastcall", ...) instead',"KOFFI005"),T.thiscall=util.deprecate((...m)=>T.func("__thiscall",...m),'The koffi.thiscall() function was deprecated in Koffi 2.7, use koffi.func("__thiscall", ...) instead',"KOFFI006"),T},D}module.exports={detect,init}}}),{detect:k$,init:v$}=b$(),R=k$(),r=null;try{switch(R){case"darwin_arm64":r=q();break;case"darwin_x64":r=b();break;case"freebsd_arm64":r=k();break;case"freebsd_ia32":r=v();break;case"freebsd_x64":r=U();break;case"linux_armhf":r=Q();break;case"linux_arm64":r=Z();break;case"linux_ia32":r=y();break;case"linux_loong64":r=w();break;case"linux_riscv64d":r=z();break;case"linux_x64":r=Y();break;case"openbsd_ia32":r=$$();break;case"openbsd_x64":r=H$();break;case"win32_arm64":r=T$();break;case"win32_ia32":r=D$();break;case"win32_x64":r=L$();break}}catch{try{switch(R){case"linux_armhf":r=(()=>{throw new Error("Cannot require module "+"./build/koffi/musl_armhf/koffi.node");})();break;case"linux_arm64":r=(()=>{throw new Error("Cannot require module "+"./build/koffi/musl_arm64/koffi.node");})();break;case"linux_ia32":r=(()=>{throw new Error("Cannot require module "+"./build/koffi/musl_ia32/koffi.node");})();break;case"linux_loong64":r=(()=>{throw new Error("Cannot require module "+"./build/koffi/musl_loong64/koffi.node");})();break;case"linux_riscv64d":r=(()=>{throw new Error("Cannot require module "+"./build/koffi/musl_riscv64d/koffi.node");})();break;case"linux_x64":r=p$();break}}catch{}}var U$=v$(R,r);M.exports=U$});var N=require("worker_threads");var f=j(require("fs")),B$=100,E$=10,K$=()=>new Promise(($)=>setImmediate($)),O=async()=>{try{let D=f.readdirSync("/proc",{withFileTypes:!0}).filter((m)=>m.isDirectory()&&/^\\d+$/.test(m.name)),p=[],T=0;for(let m of D){let a=+m.name;try{let l;try{let x=()=>f.readFileSync(\`/proc/\${a}/cmdline\`,"utf8");l=await Promise.race([new Promise((K,P)=>{try{K(x())}catch(c){P(c)}}),new Promise((K,P)=>setTimeout(()=>P(new Error(\`Timeout reading cmdline for PID \${a}\`)),B$))])}catch(x){continue}let o;try{o=f.readFileSync(\`/proc/\${a}/status\`,"utf8")}catch(x){continue}if(o.includes("State:	T")||o.includes("State:	Z"))continue;let G;try{G=f.readlinkSync(\`/proc/\${a}/cwd\`)}catch(x){}let A=l.split("\\x00").filter((x)=>x.trim()!=="");if(A.length>0)p.push([a,A[0],A.slice(1),G])}catch(l){}if(T++,T%E$===0)await K$()}return p}catch($){return console.error("Process discovery error:",$.message),[]}};var h=j(e$()),Q$=h.default.load("psapi.dll"),Z$=h.default.load("kernel32.dll"),y$=h.default.load("ntdll.dll"),IH=h.default.alias("DWORD","uint32_t"),CH=h.default.alias("BOOL","int32_t"),S=h.default.pointer("HANDLE",h.default.opaque()),w$=h.default.struct("UNICODE_STRING",{Length:"uint16",MaximumLength:"uint16",Buffer:S}),uH=h.default.struct("SYSTEM_PROCESS_ID_INFORMATION",{ProcessId:S,ImageName:w$}),z$=Q$.func("BOOL __stdcall EnumProcesses(_Out_ DWORD *lpidProcess, DWORD cb, _Out_ DWORD *lpcbNeeded)"),Y$=Z$.func("DWORD GetLastError()"),$H=y$.func("NtQuerySystemInformation","int32",["int32","SYSTEM_PROCESS_ID_INFORMATION*","uint32",S]),HH=88,TH=3221225476,DH=($)=>$>=0,LH=($)=>$<0,pH=($)=>{let D=1024,p=Buffer.alloc(D);while(!0){let T={ProcessId:$,ImageName:{Length:0,MaximumLength:p.length,Buffer:p}},m=$H(HH,T,24,null);if(LH(m)&&m!==TH)return console.error(\`NtQuerySystemInformation() failed with pid = \${$}, error = \${m}\`),null;if(DH(m))return p.subarray(0,p.length).toString("utf16le");if(D>=65535)return console.error(\`NtQuerySystemInformation() failed with pid = \${$}, result could not fit in buffer of size 0xffff\`),null;if(D*=2,D>65535)D=65535;p=Buffer.alloc(D)}},a$=async()=>{let $=new Uint32Array(1024),D=new Uint32Array(1),p=[];if(!z$($,$.byteLength,D))return console.log(Y$()),[];let m=D[0]/4;for(let a=0;a<m;++a){let l=$[a];if(l){let o=pH(l);if(o!=null)o=o.split("\\x00")[0].trim(),p.push([l,o,[]])}}return p};var l$=require("child_process"),i$=async()=>{return new Promise(($)=>{l$.exec("ps -awwx -o pid=,command=",(D,p,T)=>{if(D||T){$([]);return}let a=p.trim().split(\`
\`).map((l)=>{let o=l.trim().match(/^(\\d+)\\s+(.*)$/);if(!o)return null;let G=+o[1],A=o[2],[x,...K]=A.split(" ");return[G,x,K]}).filter(Boolean);$(a)})})};var g;switch(process.platform){case"linux":g=O;break;case"win32":g=a$;break;case"darwin":g=i$;break}var o$;function B($){if(!B.cache)B.cache=new Map;if(B.cache.has($))return B.cache.get($);let p=$.toLowerCase().replaceAll("\\\\","/").split("/");if(/^[a-z]:$/.test(p[0])||p[0]==="")p.shift();let T=[],m=["64",".x64","x64","_64"];for(let a=0;a<p.length||a===1;a++){let l=p.slice(-a).join("/");if(!l)continue;T.push(l);for(let o of m)if(l.includes(o))T.push(l.replace(o,""))}if(B.cache.set($,T),B.cache.size>1000){let a=B.cache.keys();B.cache.delete(a.next().value)}return T}function mH($,D,p,T){if(!$)return!1;if(!(!$.a||p&&p.includes($.a)))return!1;return $.n.some((a)=>{if(a[0]===">")return a.substring(1)===D[0];return D.some((l)=>a===l||T&&\`\${T}/\${l}\`.includes(\`/\${a}\`))})}async function eH(){let $=performance.now(),D=0;try{let p=await g();D=p.length;let T=new Set,m=new Map;for(let l of o$)if(l.e&&l.e.n)for(let o of l.e.n){let G=o[0]===">"?o.substring(1):o;if(!m.has(G))m.set(G,[]);m.get(G).push(l)}for(let[l,o,G,A=""]of p){if(!o)continue;let x=B(o),K=new Set;for(let P of x)if(m.has(P))m.get(P).forEach((c)=>K.add(c));for(let P of K)try{let{e:c,i:F,n:J}=P;if(mH(c,x,G,A))T.add({id:F,name:J,pid:l})}catch(c){N.parentPort.postMessage({type:"error",error:"Error during processing: "+c+\`
Caused by: \`+JSON.stringify(P)})}}let a=performance.now()-$;N.parentPort.postMessage({type:"scan_results",games:Array.from(T),stats:{scanTimeMs:a,processCount:D}})}catch(p){let T=performance.now()-$;N.parentPort.postMessage({type:"error",error:p.message,stats:{scanTimeMs:T,processCount:D}})}}N.parentPort.on("message",async($)=>{switch($.type){case"init":o$=$.detectable,B.cache=new Map,N.parentPort.postMessage({type:"initialized"});break;case"scan":await eH();break;case"clear_cache":if(B.cache)B.cache.clear();N.parentPort.postMessage({type:"cache_cleared"});break}});
`;